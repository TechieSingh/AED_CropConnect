/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Distributor.WorkArea;



import FMCG.FMCG;
import Distributor.Distributor;
import Distributor.DistributorAdmin;
import Distributor.DistributorUserAccount;
import Distributor.InventoryOfficer;
import Distributor.TransportOfficer;
import UI.FMCG.WorkArea.Admin.*;
import UI.SystemAdmin.WorkArea.ViewUserDetails;
import PersonUserProfile.Person;
import PersonUserProfile.Profile;
import PersonUserProfile.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aditya, 
 * @author Prarthana
 * 
 */
public class ManageDistUserAccountsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel processStackjPanel;
    DistributorAdmin distributorAdmin;



    ManageDistUserAccountsJPanel(JPanel processControlStack, DistributorAdmin distributorAdmin) {
        initComponents();
        this.processStackjPanel = processControlStack;
        this.distributorAdmin = distributorAdmin;
        populateTable();
        populatecombo();
    }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        lblListofUsers = new javax.swing.JLabel();
        lblManageUser = new javax.swing.JLabel();
        btnDeleteUser = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        lblChooseRole = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox<>();
        lblPersonID = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnCreatePerson = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtPersonName = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        lblCreatePerson = new javax.swing.JLabel();
        txtEmailID = new javax.swing.JTextField();
        lblPersonID1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(224, 245, 166));
        setLayout(null);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(30, 290, 80, 23);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(410, 290, 80, 23);

        lblListofUsers.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblListofUsers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListofUsers.setText("List of User Accounts");
        add(lblListofUsers);
        lblListofUsers.setBounds(30, 50, 840, 17);

        lblManageUser.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblManageUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageUser.setText("Manage User Accounts");
        add(lblManageUser);
        lblManageUser.setBounds(30, 10, 840, 28);

        btnDeleteUser.setText("Delete User");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });
        add(btnDeleteUser);
        btnDeleteUser.setBounds(740, 290, 100, 23);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblChooseRole.setText("Choose Person Role:");
        jLayeredPane1.add(lblChooseRole);
        lblChooseRole.setBounds(20, 40, 120, 20);

        cmbRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoleActionPerformed(evt);
            }
        });
        jLayeredPane1.add(cmbRole);
        cmbRole.setBounds(150, 30, 140, 30);

        lblPersonID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPersonID.setText("Email ID:");
        jLayeredPane1.add(lblPersonID);
        lblPersonID.setBounds(550, 40, 80, 20);

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jLayeredPane1.add(txtPassword);
        txtPassword.setBounds(390, 80, 150, 30);

        btnCreatePerson.setText("Create Person");
        btnCreatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePersonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(btnCreatePerson);
        btnCreatePerson.setBounds(350, 130, 110, 23);

        lblPassword.setText("Password:");
        jLayeredPane1.add(lblPassword);
        lblPassword.setBounds(310, 90, 80, 17);

        lblUsername.setText("User Name:");
        jLayeredPane1.add(lblUsername);
        lblUsername.setBounds(60, 80, 70, 20);
        jLayeredPane1.add(txtPersonName);
        txtPersonName.setBounds(390, 30, 150, 30);
        jLayeredPane1.add(txtUserName);
        txtUserName.setBounds(150, 80, 140, 30);

        lblCreatePerson.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCreatePerson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreatePerson.setText("Create Person Profile and User Account");
        jLayeredPane1.add(lblCreatePerson);
        lblCreatePerson.setBounds(0, 0, 840, 30);
        jLayeredPane1.add(txtEmailID);
        txtEmailID.setBounds(640, 30, 150, 30);

        lblPersonID1.setText("Person Name:");
        jLayeredPane1.add(lblPersonID1);
        lblPersonID1.setBounds(310, 40, 80, 20);

        add(jLayeredPane1);
        jLayeredPane1.setBounds(30, 330, 840, 170);

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Person ID", "Profile", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(userTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(30, 70, 840, 200);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        processStackjPanel.remove(this);
        ((java.awt.CardLayout) processStackjPanel.getLayout()).previous(processStackjPanel);
 //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        try {
            int selectedCourseRowIndex = userTable.getSelectedRow();
            if(selectedCourseRowIndex < 0){
                JOptionPane.showMessageDialog(null, "Please select a row from table first.","Warning", JOptionPane.WARNING_MESSAGE);
            }
            DefaultTableModel model =(DefaultTableModel)userTable.getModel();
            DistributorUserAccount selectedUserAccount =(DistributorUserAccount) model.getValueAt(selectedCourseRowIndex,0);
            ViewDistriibutorUserDetails vud = new ViewDistriibutorUserDetails(selectedUserAccount, processStackjPanel, distributorAdmin);
            processStackjPanel.add("View Account Details", vud);
            ((java.awt.CardLayout) processStackjPanel.getLayout()).next(processStackjPanel);
        } catch (Exception e) {
            System.out.println("Exception in view button: " + e.getMessage());
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void cmbRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoleActionPerformed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_cmbRoleActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        // TODO add your handling code here:
       try {
            int selectedCourseRowIndex = userTable.getSelectedRow();
            if(selectedCourseRowIndex < 0){
                JOptionPane.showMessageDialog(null, "Please select a row from table first.","Warning", JOptionPane.WARNING_MESSAGE);
            }
            DefaultTableModel model =(DefaultTableModel)userTable.getModel();
            DistributorUserAccount selectedUserAccount =(DistributorUserAccount) model.getValueAt(selectedCourseRowIndex,0);
            distributorAdmin.getDistributor().getDistributorUserAccountDirectory().deletePerson(selectedUserAccount);
            populateTable();
        } catch (Exception e) {
            System.out.println("Exception in delete button: " + e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnCreatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePersonActionPerformed
        // TODO add your handling code here:
       try {
            if(!txtPersonName.getText().isBlank()&& !txtEmailID.getText().isBlank()&& cmbRole.getSelectedItem() != null && !txtPassword.getText().isBlank() && !txtUserName.getText().isBlank()){
             Person personNew = new Person(txtPersonName.getText(),txtEmailID.getText());
                switch (String.valueOf(cmbRole.getSelectedItem())) {
                    case "InventoryOfficier":
                        InventoryOfficer inventoryOfficer= distributorAdmin.getDistributor().getInventoryOffice().newInventoryOfficer(personNew);
                        distributorAdmin.getDistributor().getDistributorUserAccountDirectory().newUserAccount(inventoryOfficer, txtUserName.getText(), txtPassword.getText());
                        break; 
                    case "TransportOfficer":
                        TransportOfficer transportOfficer= distributorAdmin.getDistributor().getTransportOffice().newTransportOfficers(personNew);
                        distributorAdmin.getDistributor().getDistributorUserAccountDirectory().newUserAccount(transportOfficer, txtUserName.getText(), txtPassword.getText());
                        break;    
                    default:
                            JOptionPane.showMessageDialog(null, "Role is not selected.", "Warning", JOptionPane.WARNING_MESSAGE);
                            break;        
                }
                populateTable();
                clearFields();
            }
            else{
                    JOptionPane.showMessageDialog(null, "Please fill all the details.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
        } catch (Exception e) {
            System.out.println("Exception in Create user: " + e.getMessage());
        }
        
        
    }//GEN-LAST:event_btnCreatePersonActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreatePerson;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChooseRole;
    private javax.swing.JLabel lblCreatePerson;
    private javax.swing.JLabel lblListofUsers;
    private javax.swing.JLabel lblManageUser;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPersonID;
    private javax.swing.JLabel lblPersonID1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPersonName;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model =(DefaultTableModel)userTable.getModel();
        model.setRowCount(0);
        for(DistributorUserAccount distributorUserAccount: distributorAdmin.getDistributor().getDistributorUserAccountDirectory().getUserAccountList()){
            Object[] row =new Object[4];
            row[0]=distributorUserAccount;
            row[1]=distributorUserAccount.getPersonId();
            row[2]=distributorUserAccount.getRole();
            row[3]=distributorUserAccount.getUsername();
            model.addRow(row);
        }
    }


    private void clearFields() {
        txtPersonName.setText("");
        txtEmailID.setText("");
        txtPersonName.setText("");
        txtUserName.setText("");
        txtEmailID.setText("");
        txtPassword.setText("");
    }

    private void populatecombo() {
        cmbRole.removeAllItems();
        cmbRole.addItem("InventoryOfficier" );
        cmbRole.addItem("TransportOfficer" );
    }

}
