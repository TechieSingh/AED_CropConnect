/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Distributor.WorkArea;

import UI.SystemAdmin.WorkArea.*;
import Business.EcoSystem;
import Business.SystemAdmin;
import CropFolder.Crop;
import FMCG.FMCG;
import FMCG.FMCGDirectory;
import FMCG.FmcgAdmin;
import Farmer.FarmerProfile;
import Distributor.Distributor;
import Distributor.DistributorAdmin;
import Distributor.DistributorUserAccount;
import Market.MarketDirectory;
import PersonUserProfile.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import CropFolder.CropDirectory;
/**
 *
 * @author Sagar
 */
public class SelectMarket extends javax.swing.JPanel {

    /**
     * Creates new form ViewUserDetails
     */
    JPanel processStackjPanel;
    MarketDirectory marketDirectory;
    DistributorAdmin distributorAdmin;
    CropDirectory cropDirectory;

    SelectMarket(JPanel processStackjPanel, DistributorAdmin distributorAdmin, MarketDirectory marketDirectory, CropDirectory cropDirectory) {
       initComponents();
        this.processStackjPanel = processStackjPanel;
        this.marketDirectory = marketDirectory;
        this.distributorAdmin= distributorAdmin;
        this.cropDirectory = cropDirectory;
        populateMarket();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblManageUser = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPersonID = new javax.swing.JLabel();
        btnRequirement = new javax.swing.JButton();
        cmbMarketName = new javax.swing.JComboBox<>();
        cmbcrop = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(224, 245, 166));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblManageUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblManageUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageUser.setText("Select Market");

        lblName.setText("Market Name:");

        lblPersonID.setText("Crop:");

        btnRequirement.setText("Check Requirement");
        btnRequirement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequirementActionPerformed(evt);
            }
        });

        cmbMarketName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMarketName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMarketNameItemStateChanged(evt);
            }
        });
        cmbMarketName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarketNameActionPerformed(evt);
            }
        });

        cmbcrop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblManageUser, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMarketName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbcrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRequirement)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManageUser, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(cmbMarketName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonID)
                    .addComponent(cmbcrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnRequirement)
                .addContainerGap(326, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        try {
            processStackjPanel.remove(this);
            Component[] componentArray = processStackjPanel.getComponents();
            Component component = componentArray[componentArray.length - 1];
            ManageDistUserAccountsJPanel manageUserAccountsJPanel = (ManageDistUserAccountsJPanel) component;
            //manageUserAccountsJPanel.refreshUserAccountTable();
            CardLayout layout = (CardLayout) processStackjPanel.getLayout();
            layout.previous(processStackjPanel);
            
        } catch (Exception e) {
            System.out.println("Exception in back button: " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRequirementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequirementActionPerformed
        // TODO add your handling code here:
        String marketName = String.valueOf(cmbMarketName.getSelectedItem());
        String[] crop = String.valueOf(cmbcrop.getSelectedItem()).split(" ");
        Crop crop1= cropDirectory.searchCrop(crop[0], crop[1]);
        ViewCropProcurement viewCropsRequirments = new ViewCropProcurement(processStackjPanel, distributorAdmin, marketDirectory.searchMarkets(marketName), crop1);
        processStackjPanel.add("ViewCropProcurement",viewCropsRequirments);
        CardLayout layout = (CardLayout) processStackjPanel.getLayout();
        layout.next(processStackjPanel);
    }//GEN-LAST:event_btnRequirementActionPerformed

    private void cmbMarketNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarketNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMarketNameActionPerformed

    private void cmbMarketNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMarketNameItemStateChanged
        // TODO add your handling code here:
        populateCrops();
    }//GEN-LAST:event_cmbMarketNameItemStateChanged

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequirement;
    private javax.swing.JComboBox<String> cmbMarketName;
    private javax.swing.JComboBox<String> cmbcrop;
    private javax.swing.JLabel lblManageUser;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonID;
    // End of variables declaration//GEN-END:variables

    private void populateMarket() {
        cmbMarketName.removeAllItems();
        for(Market.Market market:marketDirectory.getMarkets()){
            cmbMarketName.addItem(market.getMarketName());     
        }
        populateCrops();
    }

    private void populateCrops() {
        String selectedMarket = String.valueOf(cmbMarketName.getSelectedItem());
        if(cmbMarketName.getSelectedIndex()>-1){
            cmbcrop.removeAllItems();
            for(Crop crop:marketDirectory.searchMarkets(selectedMarket).getMasterRequirment().getCropList()){
                cmbcrop.addItem(crop.getCropName()+" "+crop.getGrade());     
            }
        }
    }
}
