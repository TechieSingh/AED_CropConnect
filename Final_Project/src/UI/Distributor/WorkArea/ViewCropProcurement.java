/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Distributor.WorkArea;

import Common.Item;
import CropFolder.Crop;
import Distributor.BuyOffer;
import Distributor.DistributorAdmin;
import FMCG.Requirement;
import FMCG.SeasonNew;
import Market.Market;
import Market.MarketDirectory;
import UI.FMCG.WorkArea.Admin.*;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Aditya
 */
public class ViewCropProcurement extends javax.swing.JPanel {

    /**
     * Creates new form ViewCropRequirements
     */

    JPanel processControlStack;
    DistributorAdmin distributorAdmin;
    Market market;
    CropFolder.Crop crop;
    //ChartPanel pieChartPanel;
    
    public ViewCropProcurement(JPanel processStackjPanel, DistributorAdmin distributorAdmin, Market market, CropFolder.Crop crop) {
        initComponents();
        this.processControlStack = processStackjPanel;
        this.distributorAdmin = distributorAdmin;
        this.market = market;
        this.crop= crop;
        lblTitle.setText("Crop: "+crop.getCropName()+" "+crop.getGrade());
        jLabel4.setText("Season : "+market.getSeason() );
        createPieChartPanel();  
    }

        
    public void createPieChartPanel() {
        // Create a sample dataset
        DefaultPieDataset dataset = new DefaultPieDataset();
        for(Requirement requirement: market.getMasterRequirment().getRequirements()){
            if(requirement.getItem().getCrop().equals(crop))
            dataset.setValue(requirement.getFmcg().getFmcgName(), requirement.getItem().getQuantity());
        }

        // Create the chart using the dataset
        JFreeChart chart1 = ChartFactory.createPieChart("Total Requirement", // Title
                dataset, // Dataset
                true, // Include legend
                true, // Include tooltips
                false); // Exclude URLs
        
        // Create the second sample dataset
        DefaultPieDataset dataset2 = new DefaultPieDataset();
        dataset2.setValue("Filled Quantity", market.getMasterRequirment().getCropQty(crop));
        dataset2.setValue("Remaining Requirment", market.getTotalContarctQuantity(crop)-market.getMasterRequirment().getCropQty(crop));


        // Create the second chart using the second dataset
        JFreeChart chart2 = ChartFactory.createPieChart(
                "Total Committed", // Title
                dataset2, // Dataset
                true, // Include legend
                true, // Include tooltips
                false); // Exclude URLs

        // Create a ChartPanel with both charts
        ChartPanel chartPanel1 = new ChartPanel(chart1);
        chartPanel1.setPreferredSize(new java.awt.Dimension(300, 300)); // Set size of the ChartPanel

        // Create a ChartPanel for the second chart
        ChartPanel chartPanel2 = new ChartPanel(chart2);
        chartPanel2.setPreferredSize(new java.awt.Dimension(300, 300)); // Set size of the ChartPanel


        
        //ChartPanel pieChartPanel;
        panel1pie1.add(chartPanel1);
        panel1pie1.revalidate();
        panel1pie1.repaint();
        
        panel2pie2.add(chartPanel2);
        panel2pie2.revalidate();
        panel2pie2.repaint();
        //return chartPanel;
    }


    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        panel2pie2 = new javax.swing.JPanel();
        panel1pie1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBuyOffer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(224, 245, 166));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("lbl");

        panel2pie2.setBackground(new java.awt.Color(255, 255, 255));
        panel2pie2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        panel2pie2.setPreferredSize(new java.awt.Dimension(275, 275));
        panel2pie2.setLayout(new java.awt.BorderLayout());

        panel1pie1.setBackground(new java.awt.Color(255, 255, 255));
        panel1pie1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        panel1pie1.setPreferredSize(new java.awt.Dimension(275, 275));
        panel1pie1.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Quantity:");

        jLabel3.setText("Price:");

        btnBuyOffer.setText("Create Offer");
        btnBuyOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyOfferActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("jLabel4");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(485, 485, 485))
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(481, 481, 481)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuyOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(panel1pie1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                                .addComponent(panel2pie2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(117, 117, 117))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel2pie2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel1pie1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBuyOffer)
                .addGap(105, 105, 105))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyOfferActionPerformed
        // TODO add your handling code here:
        try {
            if(!market.getSeason().equals(SeasonNew.SELLING_PHASE)){
                JOptionPane.showMessageDialog(null, "Cant create offer: its in commintment phase", "Warning", JOptionPane.WARNING_MESSAGE);
                clearFields();
                return;
            }
            if(!txtPrice.getText().isBlank()&& !txtQuantity.getText().isBlank()){
                double quantity = Double.parseDouble(txtQuantity.getText());
                double Price = Double.parseDouble(txtPrice.getText());
//                String[] CropnameNgrade = String.valueOf(cmbCrop.getSelectedItem()).split(" ");
//                Crop crop = cropDirectory.searchCrop(CropnameNgrade[0], CropnameNgrade[1]);
                if(crop!=null){
                    Item item = new Item(crop,quantity);
//                    Market market = marketDirectory.searchMarkets(String.valueOf(cmbMarketName.getSelectedItem()));
                    BuyOffer buyoffer =market.getBuyOfferDirectory().newBuyOffer(market, distributorAdmin, item, Price);
//                    populateTable();
                    clearFields();
                }
                else{
                    JOptionPane.showMessageDialog(null, "selected crop doesnot exist.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                    JOptionPane.showMessageDialog(null, "Please fill all the details.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
        } catch (Exception e) {
            System.out.println("Exception in Create user: " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnBuyOfferActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuyOffer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panel1pie1;
    private javax.swing.JPanel panel2pie2;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        txtPrice.setText("");
        txtQuantity.setText("");
    }
}
