/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.FMCG.WorkArea.Admin;

import FMCG.MasterRequirment;
import FMCG.ProcurementOfficer;
import FMCG.ProcurementOffer;
import FMCG.Requirement;
import FMCG.SeasonNew;
import Market.Market;
import Market.MarketDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal bugrara
 */
public class ManageCropsProcurement extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel processControlStack;
    ProcurementOfficer procurementOfficer;
    MarketDirectory marketDirectory;
    MasterRequirment masterRequirment;
    Market market;

    public ManageCropsProcurement(JPanel psjp, ProcurementOfficer procurementOfficer, MarketDirectory marketDirectory) {
        initComponents();
        processControlStack = psjp;
        this.procurementOfficer = procurementOfficer;
        this.marketDirectory = marketDirectory;
        populateComboBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        lblListofUsers = new javax.swing.JLabel();
        lblManageUser = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProcurementTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbMarkets = new javax.swing.JComboBox<>();
        btnViewCrops = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(null);

        btnBack.setText("Logout");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(790, 20, 72, 23);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(800, 490, 80, 23);

        lblListofUsers.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblListofUsers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListofUsers.setText("List of Crops");
        add(lblListofUsers);
        lblListofUsers.setBounds(30, 50, 840, 17);

        lblManageUser.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblManageUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageUser.setText("Manage Crop Procurement");
        add(lblManageUser);
        lblManageUser.setBounds(30, 10, 840, 28);

        ProcurementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Crop Name", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ProcurementTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(40, 130, 840, 350);

        jLabel1.setText("Market:");
        add(jLabel1);
        jLabel1.setBounds(40, 70, 44, 17);

        cmbMarkets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarketsActionPerformed(evt);
            }
        });
        add(cmbMarkets);
        cmbMarkets.setBounds(40, 90, 160, 23);

        btnViewCrops.setText("View Crops");
        btnViewCrops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCropsActionPerformed(evt);
            }
        });
        add(btnViewCrops);
        btnViewCrops.setBounds(200, 90, 100, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        processControlStack.remove(this);
        ((java.awt.CardLayout) processControlStack.getLayout()).previous(processControlStack);
        //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try {
        int selectedRow = ProcurementTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }else{
            if (cmbMarkets.getSelectedItem() != null) {
                market = marketDirectory.searchMarkets(String.valueOf(cmbMarkets.getSelectedItem()));
                if(market != null){
                    DefaultTableModel model = (DefaultTableModel) ProcurementTable.getModel();
                    Requirement requirement  = (Requirement) model.getValueAt(selectedRow, 0);
                    FMCGCropProcurementDashboard dcr = new FMCGCropProcurementDashboard(processControlStack, procurementOfficer, market,requirement);
                    processControlStack.add("View Crop Dashboard", dcr);
                    CardLayout layout = (CardLayout) processControlStack.getLayout();
                    layout.next(processControlStack); 
                    }
                }      
            }
        } catch (Exception e) {
            System.out.println("Exception in view button: " + e.getMessage());
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void cmbMarketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMarketsActionPerformed

    private void btnViewCropsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCropsActionPerformed
        // TODO add your handling code here:
        if (cmbMarkets.getSelectedItem() != null) {
            market = marketDirectory.searchMarkets(String.valueOf(cmbMarkets.getSelectedItem()));
            masterRequirment = market.getMasterRequirment();
            populateTable(masterRequirment);
            }
    }//GEN-LAST:event_btnViewCropsActionPerformed
    
    
    private void populateComboBox() {
        for (Market marketTemp: marketDirectory.getMarkets()){
            if(marketTemp.getSeason() == SeasonNew.COMMITMENT_PHASE){
                cmbMarkets.addItem(marketTemp.getMarketName());
            }
            
        }
    }
        private void populateTable(MasterRequirment masterRequirment) {
        try {
            int rc = ProcurementTable.getRowCount();
            int i;
            for (i = rc - 1; i >= 0; i--) {
                ((DefaultTableModel) ProcurementTable.getModel()).removeRow(i);
            }
            
            for (Requirement tempReq: masterRequirment.getRequirements()){
                    Object[] row = new Object[2];                    
                    row[0] = tempReq;
                    row[1] = tempReq.getItem().getCrop().getGrade();
                    ((DefaultTableModel) ProcurementTable.getModel()).addRow(row);
            }
     
        } catch (Exception e) {
            System.out.println("Exception in Populating crop requirement table: " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ProcurementTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewCrops;
    private javax.swing.JComboBox<String> cmbMarkets;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblListofUsers;
    private javax.swing.JLabel lblManageUser;
    // End of variables declaration//GEN-END:variables

}
