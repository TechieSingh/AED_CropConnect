/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.QualityAssurance.WorkArea;
import Contract.Contract;
import Contract.ContractDirectory;
import QualityAssurance.QualityAssuranceProfile;
import javax.swing.JPanel;
import UI.FMCG.WorkArea.Admin.*;
import java.awt.CardLayout;
import java.awt.Window;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aditya
 */
public class CropQualityManager extends javax.swing.JPanel {

    /**
     * Creates new form ViewCropRequirements
     */

    JPanel qaManagerProcessStack;
    QualityAssuranceProfile qaProfile;
    ContractDirectory contractDirectory;
    public CropQualityManager(JPanel CQM, QualityAssuranceProfile qaProfile, ContractDirectory contractDirectory) {
        initComponents();
        qaManagerProcessStack = CQM;
        this.qaProfile = qaProfile;
        this.contractDirectory = contractDirectory;
        populateListofCrops();

    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnApprove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListofCrops = new javax.swing.JTable();
        btnReject = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Crop Quality Assurance Phase");

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        tblListofCrops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Crop Name", "Grade", "Quantity", "Farmer Name", "Crop QA Status "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListofCrops);

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        jLabel5.setText("List of Crops Grown by Farmer");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReject)
                    .addComponent(btnApprove))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblListofCrops.getSelectedRow();
        if(selectedRow>=0){
            DefaultTableModel model = (DefaultTableModel) tblListofCrops.getModel();
            Contract selectedContract = (Contract) model.getValueAt(selectedRow, 0);
            selectedContract.setQualityAssuranceApproval(true);
            populateListofCrops();
        }else{
            JOptionPane.showMessageDialog(null,"Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblListofCrops.getSelectedRow();
        if(selectedRow>=0){
            DefaultTableModel model = (DefaultTableModel) tblListofCrops.getModel();
            Contract selectedContract = (Contract) model.getValueAt(selectedRow, 0);
            selectedContract.setQualityAssuranceApproval(false);
            populateListofCrops();
        }else{
            JOptionPane.showMessageDialog(null,"Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        qaManagerProcessStack.remove(this);
        ((java.awt.CardLayout) qaManagerProcessStack.getLayout()).previous(qaManagerProcessStack);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblListofCrops;
    // End of variables declaration//GEN-END:variables

    private void populateListofCrops() {
        try {
            int rc = tblListofCrops.getRowCount();
            int i;
            for (i = rc - 1; i >= 0; i--) {
                ((DefaultTableModel) tblListofCrops.getModel()).removeRow(i);
            }
            for (Contract contract : contractDirectory.getContracts()) {
                Object[] row = new Object[5];
                row[0] = contract;
                row[1] = contract.getSelectedItem().getCrop().getGrade();
                row[2] = contract.getSelectedItem().getQuantity();
                row[3] = contract.getFarmer().getPerson().getFullName();
                row[4] = contract.isQualityAssuranceApproval();
                ((DefaultTableModel) tblListofCrops.getModel()).addRow(row);
            }     
        } catch (Exception e) {
            System.out.println("Exception in Populating Farmer Contracts: " + e.getMessage());
        }
    }
    
    private void updateQualityAssurance(boolean newValue) {
        DefaultTableModel model = (DefaultTableModel) tblListofCrops.getModel();
        int rowCount = model.getRowCount();
        int columnCount = model.getColumnCount();

        for (int row = 0; row < rowCount; row++) {
            // Assuming the last column is the boolean column
            model.setValueAt(newValue, row, columnCount - 1);
        }
    }
}
