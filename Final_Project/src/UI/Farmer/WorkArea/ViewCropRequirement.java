/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Farmer.WorkArea;

import Common.Item;
import Contract.ContractDirectory;
import FMCG.MasterRequirment;
import FMCG.Requirement;
import FMCG.SeasonNew;
import Farmer.FarmerProfile;
import Market.Market;
import Market.MarketDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sagar
 */
public class ViewCropRequirement extends javax.swing.JPanel {

    /**
     * Creates new form ViewCropRequirement
     */
    JPanel farmerProcessStack;
    FarmerProfile farmerprofile;
    ContractDirectory contractDirectory;
    MarketDirectory marketDirectory;
    MasterRequirment masterRequirment;
    Market market;
    
    public ViewCropRequirement(JPanel jp, FarmerProfile farmerprofile, MarketDirectory marketDirectory, ContractDirectory contractDirectory) {
        initComponents();
        farmerProcessStack = jp;
        this.farmerprofile = farmerprofile;
        this.contractDirectory = contractDirectory;
        this.marketDirectory = marketDirectory;
        populateMarketNames();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblListCrops = new javax.swing.JTable();
        lblDashboard = new javax.swing.JLabel();
        btnViewCropDashboard = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearchField = new javax.swing.JTextField();
        lblMarket = new javax.swing.JLabel();
        cmbMarketName = new javax.swing.JComboBox<>();
        btnViewCropList = new javax.swing.JButton();
        lblDashboard1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));

        tblListCrops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Crop", "Grade", "Quantity", "Posted By FMCG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListCrops);

        lblDashboard.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblDashboard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDashboard.setText("List of Crops Required in Commitment Phase Market");

        btnViewCropDashboard.setBackground(new java.awt.Color(0, 102, 153));
        btnViewCropDashboard.setForeground(new java.awt.Color(255, 255, 255));
        btnViewCropDashboard.setText("View Crop Dashboard");
        btnViewCropDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnViewCropDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewCropDashboardMouseExited(evt);
            }
        });
        btnViewCropDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCropDashboardActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 102, 153));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(0, 102, 153));
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search Crop Name:");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblMarket.setText("Select Market:");

        cmbMarketName.setToolTipText("");
        cmbMarketName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarketNameActionPerformed(evt);
            }
        });

        btnViewCropList.setBackground(new java.awt.Color(0, 102, 153));
        btnViewCropList.setForeground(new java.awt.Color(255, 255, 255));
        btnViewCropList.setText("View Crops List");
        btnViewCropList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCropListActionPerformed(evt);
            }
        });

        lblDashboard1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblDashboard1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDashboard1.setText("View Market Requirements");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(btnViewCropDashboard))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(lblDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(lblMarket)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMarketName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewCropList)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearch)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(222, 222, 222)
                                .addComponent(lblDashboard1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDashboard1)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarket)
                    .addComponent(cmbMarketName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewCropList)
                    .addComponent(btnSearch)
                    .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(lblDashboard)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnViewCropDashboard)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCropDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCropDashboardActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblListCrops.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row from table first!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                if (cmbMarketName.getSelectedItem() != null) {
                    market = marketDirectory.searchMarkets(String.valueOf(cmbMarketName.getSelectedItem()));
                    if (market != null) {
                        DefaultTableModel model = (DefaultTableModel) tblListCrops.getModel();
                        Requirement requirement = (Requirement) model.getValueAt(selectedRow, 0);
                        DashboardCropRequirements dcr = new DashboardCropRequirements(farmerProcessStack, farmerprofile, market, requirement, contractDirectory);
                        farmerProcessStack.add("View Crop Dashboard", dcr);
                        CardLayout layout = (CardLayout) farmerProcessStack.getLayout();
                        layout.next(farmerProcessStack);
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("Exception in view button: " + e.getMessage());
        }
    }//GEN-LAST:event_btnViewCropDashboardActionPerformed

    private void btnViewCropDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewCropDashboardMouseEntered
        // TODO add your handling code here:
        btnViewCropDashboard.setBackground(Color.decode("#0EF4FB"));
    }//GEN-LAST:event_btnViewCropDashboardMouseEntered

    private void btnViewCropDashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewCropDashboardMouseExited
        // TODO add your handling code here:
        btnViewCropDashboard.setBackground(Color.decode("#CCFFFF"));
    }//GEN-LAST:event_btnViewCropDashboardMouseExited

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        farmerProcessStack.remove(this);
        ((java.awt.CardLayout) farmerProcessStack.getLayout()).previous(farmerProcessStack);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewCropListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCropListActionPerformed
        // TODO add your handling code here:
        if (cmbMarketName.getSelectedItem() != null) {
            market = marketDirectory.searchMarkets(String.valueOf(cmbMarketName.getSelectedItem()));
            masterRequirment = market.getMasterRequirment();
            populateRequirementTable(masterRequirment);
        }
    }//GEN-LAST:event_btnViewCropListActionPerformed

    private void cmbMarketNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarketNameActionPerformed
        if (cmbMarketName.getSelectedItem() != null) {
            market = marketDirectory.searchMarkets(String.valueOf(cmbMarketName.getSelectedItem()));
            masterRequirment = market.getMasterRequirment();
            populateRequirementTable(masterRequirment);
        }
    }//GEN-LAST:event_cmbMarketNameActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewCropDashboard;
    private javax.swing.JButton btnViewCropList;
    private javax.swing.JComboBox<String> cmbMarketName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDashboard;
    private javax.swing.JLabel lblDashboard1;
    private javax.swing.JLabel lblMarket;
    private javax.swing.JTable tblListCrops;
    private javax.swing.JTextField txtSearchField;
    // End of variables declaration//GEN-END:variables

    private void populateRequirementTable(MasterRequirment masterRequirment) {
        try {
            int rc = tblListCrops.getRowCount();
            int i;
            for (i = rc - 1; i >= 0; i--) {
                ((DefaultTableModel) tblListCrops.getModel()).removeRow(i);
            }
            
            for (Requirement tempReq : masterRequirment.getRequirements()) {
                Object[] row = new Object[4];
                row[0] = tempReq;
                row[1] = tempReq.getItem().getCrop().getGrade();
                row[2] = tempReq.getItem().getQuantity();
                row[3] = tempReq.getFmcg().getFmcgName();
                ((DefaultTableModel) tblListCrops.getModel()).addRow(row);
            }
//            for(int j=0; j<temprequirements.size();j++){
//                    Object[] row = new Object[4];                    
//                    row[0] = temprequirements.get(j).getItems().get(j).getCrop().getCropName();
//                    row[1] = temprequirements.get(j).getItems().get(j).getQuantity();
//                    row[2] = temprequirements.get(j).getItems().get(j).getCrop().getGrade();
//                    row[3] = temprequirements.get(j).getFmcg().getFmcgName();
//                    ((DefaultTableModel) tblListCrops.getModel()).addRow(row);
//            }     
        } catch (Exception e) {
            System.out.println("Exception in Populating crop requirement table: " + e.getMessage());
        }
    }
    
    private void populateMarketNames() {
        for (Market marketTemp : marketDirectory.getMarkets()) {
            if (marketTemp.getSeason() == SeasonNew.COMMITMENT_PHASE) {
                cmbMarketName.addItem(marketTemp.getMarketName());
            }
        }
        if (cmbMarketName.getItemCount() > 0) {
            cmbMarketName.setSelectedIndex(0);
        }
    }
}
