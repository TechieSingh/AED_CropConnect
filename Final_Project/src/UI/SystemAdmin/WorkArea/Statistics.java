/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdmin.WorkArea;

import Business.EcoSystem;
import Farmer.FarmerDirectory;
import Farmer.FarmerProfile;
import Farmer.Transaction;
import Market.MarketDirectory;
import java.awt.CardLayout;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sagar
 */
public class Statistics extends javax.swing.JPanel {

    /**
     * Creates new form Statistics
     */
    JPanel sysadminProcessStack;
    EcoSystem ecosystem;

    public Statistics(EcoSystem eco, JPanel jp) {
        initComponents();
        sysadminProcessStack = jp;
        ecosystem = eco;
        populateComboBox(ecosystem.getFarmerDirectory());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStats = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbFarmers = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnCalculate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtMarketParticipationRate = new javax.swing.JTextField();
        btnCropAnalytics = new javax.swing.JButton();
        btnFmcgTransactions = new javax.swing.JButton();
        btnFarmerTransactions = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lblStats.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblStats.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStats.setText("Statistics");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Calculate market participation rate:");

        cmbFarmers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Farmer:");

        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        jLabel3.setText("Rate:");

        txtMarketParticipationRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarketParticipationRateActionPerformed(evt);
            }
        });

        btnCropAnalytics.setText("Crop Analytics");
        btnCropAnalytics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCropAnalyticsActionPerformed(evt);
            }
        });

        btnFmcgTransactions.setText("FMCG Transactions ");
        btnFmcgTransactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFmcgTransactionsActionPerformed(evt);
            }
        });

        btnFarmerTransactions.setText("Farmer Transactions");
        btnFarmerTransactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFarmerTransactionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(356, 356, 356)
                        .addComponent(lblStats))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addComponent(btnCropAnalytics))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbFarmers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCalculate)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addComponent(btnFmcgTransactions))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFarmerTransactions)
                            .addComponent(txtMarketParticipationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStats)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbFarmers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnCalculate)
                    .addComponent(jLabel3)
                    .addComponent(txtMarketParticipationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCropAnalytics)
                    .addComponent(btnFmcgTransactions)
                    .addComponent(btnFarmerTransactions))
                .addContainerGap(384, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        sysadminProcessStack.remove(this);
        ((java.awt.CardLayout) sysadminProcessStack.getLayout()).previous(sysadminProcessStack);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtMarketParticipationRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarketParticipationRateActionPerformed


    }//GEN-LAST:event_txtMarketParticipationRateActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        MarketDirectory marketDirectory = ecosystem.getMarketDirectory();
        String selectedFarmerName = (String) cmbFarmers.getSelectedItem();

        // Check if a farmer is selected.
        if (selectedFarmerName == null) {
            JOptionPane.showMessageDialog(this, "Please select a farmer first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the FarmerDirectory from the EcoSystem
        FarmerDirectory farmerDirectory = ecosystem.getFarmerDirectory();

        // Find the FarmerProfile corresponding to the selected name
        FarmerProfile selectedFarmer = null;
        for (FarmerProfile farmer : farmerDirectory.getFarmerProfiles()) {
            if (farmer.getPerson().getFullName().equals(selectedFarmerName)) {
                selectedFarmer = farmer;
                break;
            }
        }

        // Ensure a farmer was found
        if (selectedFarmer == null) {
            JOptionPane.showMessageDialog(this, "Farmer not found.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        double result = calculateMarketParticipationRate(selectedFarmer, marketDirectory);
        txtMarketParticipationRate.setText(result + "");
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnCropAnalyticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCropAnalyticsActionPerformed
        CropAnalyticsJPanel ss = new CropAnalyticsJPanel(ecosystem, sysadminProcessStack);
        sysadminProcessStack.add("Statistics", ss);
        CardLayout layout = (CardLayout) sysadminProcessStack.getLayout();
        layout.next(sysadminProcessStack);
    }//GEN-LAST:event_btnCropAnalyticsActionPerformed

    private void btnFmcgTransactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFmcgTransactionsActionPerformed
        FMCGTransactionsJPanel fMCGTransactionsJPanel = new FMCGTransactionsJPanel(ecosystem, sysadminProcessStack);
        sysadminProcessStack.add("FMCGTransactions", fMCGTransactionsJPanel);
        CardLayout layout = (CardLayout) sysadminProcessStack.getLayout();
        layout.next(sysadminProcessStack);
    }//GEN-LAST:event_btnFmcgTransactionsActionPerformed

    private void btnFarmerTransactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFarmerTransactionsActionPerformed
        FarmerTransactionsJPanel farmerTransactionsJPanel = new FarmerTransactionsJPanel(ecosystem, sysadminProcessStack);
        sysadminProcessStack.add("FarmerTransactionsJPanel", farmerTransactionsJPanel);
        CardLayout layout = (CardLayout) sysadminProcessStack.getLayout();
        layout.next(sysadminProcessStack);
    }//GEN-LAST:event_btnFarmerTransactionsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnCropAnalytics;
    private javax.swing.JButton btnFarmerTransactions;
    private javax.swing.JButton btnFmcgTransactions;
    private javax.swing.JComboBox<String> cmbFarmers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblStats;
    private javax.swing.JTextField txtMarketParticipationRate;
    // End of variables declaration//GEN-END:variables

    private void populateComboBox(FarmerDirectory farmerDirectory) {
        cmbFarmers.removeAllItems(); // Clear existing items if any
        for (FarmerProfile farmer : farmerDirectory.getFarmerProfiles()) {
            cmbFarmers.addItem(farmer.getPerson().getFullName());
        }
    }

    public double calculateMarketParticipationRate(FarmerProfile farmerProfile, MarketDirectory marketDirectory) {
        HashSet<String> marketsParticipated = new HashSet<>();
        for (Transaction transaction : farmerProfile.getFarmerTransactions()) {
            marketsParticipated.add(transaction.getBuyOffer().getMarket().getMarketName());
        }
        return (double) marketsParticipated.size() / marketDirectory.getMarkets().size() * 100;
    }

}
