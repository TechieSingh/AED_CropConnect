/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdmin.WorkArea;

import Business.EcoSystem;
import Distributor.FmcgTransaction;
import Distributor.FmcgTransactionDirectory;
import FMCG.Requirement;
import Market.Market;
import Market.MarketDirectory;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amitanveri
 */
public class FMCGTransactionsJPanel extends javax.swing.JPanel {

    JPanel sysadminProcessStack;
    EcoSystem ecosystem;

    public FMCGTransactionsJPanel(EcoSystem eco, JPanel jp) {
        initComponents();
        sysadminProcessStack = jp;
        ecosystem = eco;
        populateMarketComboBox();
        populateTable();
        cmbMarketActionPerformed(null);
    }

    public List<FmcgTransaction> getTransactionsForMarket(FmcgTransactionDirectory transactionsDirectory, String marketName) {
        List<FmcgTransaction> filteredTransactions = new ArrayList<>();
        for (FmcgTransaction transaction : transactionsDirectory.getTransactions()) {
            Requirement requirement = transaction.getProcurementOffer().getRequirement();
            Market market = requirement.getMarket();
            if (market.getMarketName().equals(marketName)) {
                filteredTransactions.add(transaction);
            }
        }
        return filteredTransactions;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cmbMarket = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("FMCG TRANSACTIONS");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FMCG", "Distributor", "Item", "Quantity", "Price (Per Ton)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        cmbMarket.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarketActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Market:");

        jButton1.setText("<<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbMarket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMarket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarketActionPerformed
        String selectedMarketName = (String) cmbMarket.getSelectedItem();
        if (selectedMarketName != null) {
            FmcgTransactionDirectory transactionsDirectory = ecosystem.getFmcgTransactionDirectory();
            List<FmcgTransaction> filteredTransactions = getTransactionsForMarket(transactionsDirectory, selectedMarketName);
            populateTable(filteredTransactions);
        }
    }//GEN-LAST:event_cmbMarketActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sysadminProcessStack.remove(this);
        ((java.awt.CardLayout) sysadminProcessStack.getLayout()).previous(sysadminProcessStack);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbMarket;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data

        FmcgTransactionDirectory transactionsDirectory = ecosystem.getFmcgTransactionDirectory(); // Assuming a method to fetch this
        List<FmcgTransaction> transactions = transactionsDirectory.getTransactions(); // Assuming this method exists

        for (FmcgTransaction transaction : transactions) {
            Object[] row = new Object[5];
            row[0] = transaction.getFmcg().getFmcgName();
            row[1] = transaction.getDistributor().getDistributorName();
            row[2] = transaction.getItem().getCrop().getCropName();
            row[3] = transaction.getItem().getQuantity();
            row[4] = transaction.getProcurementOffer().getUnitPrice();

            model.addRow(row);
        }
    }

    private void populateMarketComboBox() {
        MarketDirectory marketDirectory = ecosystem.getMarketDirectory();
        cmbMarket.removeAllItems(); // Clear existing items
        for (Market market : marketDirectory.getMarkets()) {
            cmbMarket.addItem(market.getMarketName());
        }
        if (cmbMarket.getItemCount() > 0) {
            cmbMarket.setSelectedIndex(0);  // Set default selection to the first item
        }
    }

    private void populateTable(List<FmcgTransaction> transactions) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data

        for (FmcgTransaction transaction : transactions) {
            Object[] row = new Object[5];
            row[0] = transaction.getFmcg().getFmcgName();
            row[1] = transaction.getDistributor().getDistributorName();
            row[2] = transaction.getItem().getCrop().getCropName();
            row[3] = transaction.getItem().getQuantity();
            row[4] = transaction.getProcurementOffer().getUnitPrice();

            model.addRow(row);
        }
    }

}
